#################################################################################
# The Fossilized Birth-Death Process prior on the topology and speciation times #
#################################################################################

# Define exponential priors on the birth rate and death rate #
speciation_rate ~ dnExponential(10)
extinction_rate ~ dnExponential(10)

# Specify a scale move on the speciation_rate parameter #
moves.append( mvScale(speciation_rate, lambda=0.5,tune=true,weight=3.0) )

# Specify a scale move on the extinction_rate parameter #
moves.append( mvScale(extinction_rate, lambda=0.5,tune=true,weight=3.0) )

# Create deterministic nodes for the diversification and turnover rates to monitor these parameters #
diversification := speciation_rate - extinction_rate
turnover := extinction_rate/speciation_rate

# Fix the probability of sampling parameter (rho) to 1 #
# because all extant bears are represented in our analysis #
rho <- 1.0

# Assume an exponential prior on the rate of sampling fossils (psi) #
psi ~ dnExponential(10) 

# Specify a scale move on the psi parameter #
moves.append( mvScale(psi, lambda=0.5, tune=true, weight=1) )

# The FBD is conditioned on a starting time for the process, which is the origin time #
# Specify a uniform prior on the origin #
origin_time ~ dnUnif(37.2, 49.0)

# Specify a sliding-window move on the origin_time parameter #
moves.append( mvSlide(origin_time, delta=1.0, tune=true, weight=5.0) )

# Define the tree-prior distribution as the birth-death process #
tree_dist = dnFBDRP(lambda=speciation_rate, mu=extinction_rate, psi=psi, rho=rho, origin=origin_time, taxa=taxa)

# Define clade constraints #
clade_ursinae = clade("Melursus_ursinus", "Ursus_arctos", "Ursus_maritimus", 
              "Helarctos_malayanus", "Ursus_americanus", "Ursus_thibetanus", "Ursus_abstrusus")                  
constraints = v(clade_ursinae)

# Define a stochastic node for the constrained tree topology #
timetree ~ dnConstrainedTopology(tree_dist, constraints=constraints)

# Specify moves on the tree and node times #
moves.append( mvNarrow(timetree, weight=n_taxa) )
moves.append( mvFNPR(timetree, weight=n_taxa/5.0) )
moves.append( mvCollapseExpandFossilBranch(timetree, origin_time, weight=6.0) )

moves.append( mvNodeTimeSlideUniform(timetree, weight=n_taxa) )
moves.append( mvRootTimeSlideUniform(timetree, origin_time, weight=5.0) )

# Monitor the age of Ursinae #
age_ursinae := tmrca(timetree, clade_ursinae)

# Monitor the age of the MRCA of living bears #
clade_extant = clade("Ailuropoda_melanoleuca","Tremarctos_ornatus","Melursus_ursinus",
                "Ursus_arctos","Ursus_maritimus","Helarctos_malayanus",
                "Ursus_americanus","Ursus_thibetanus")
extant_mrca := tmrca(timetree, clade_extant)

# Monitor the number of sampled ancestors in the FBD-tree #
num_samp_anc := timetree.numSampledAncestors()

# Monitor the tree, pruning fossil taxa for which we do not have morphological or molecular data #
pruned_tree := fnPruneTree(timetree, prune=v("Parictis_montanus","Ursus_abstrusus"))
